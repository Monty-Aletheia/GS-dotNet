trigger:
  branches:
    include:
      - main

variables:
  acrName: WatchTowerACR
  tag: $(Build.BuildId)

stages:
  - stage: BuildAndPushImages
    displayName: Build and Push Docker Images
    jobs:
      - job: DockerBuildPush
        displayName: Build and Push Services
        strategy:
          matrix:
            user-service:
              repository: user-service
              dockerfilePath: ./UserService/Dockerfile
              buildContext: .
            mlnet-service:
              repository: mlnet-service
              dockerfilePath: ./MlNetService/Dockerfile
              buildContext: .

        pool:
          vmImage: 'ubuntu-latest'

        steps:
          - checkout: self

          - task: Docker@2
            displayName: Login to ACR
            inputs:
              command: login
              containerRegistry: $(acrName)


          - task: Docker@2
            displayName: Build & Push $(repository)
            inputs:
              command: buildAndPush
              repository: $(acrName)/$(repository)
              dockerfile: $(dockerfilePath)
              buildContext: $(buildContext)
              tags: |
                $(tag)
                latest
                
  - stage: Deploy
    displayName: Deploy to ACI
    dependsOn: BuildAndPushImages
    jobs:
      - job: DeployACI
        displayName: Deploy Multi-Container ACI
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'WatchTower-ARM'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az container delete --name user-service-aci --resource-group rg-gs-watchTower --yes || true
                az container delete --name mlnet-service-aci --resource-group rg-gs-watchTower --yes || true
                az container delete --name rabbitmq-aci --resource-group rg-gs-watchTower --yes || true

                az container create \
                  --resource-group rg-gs-watchTower \
                  --name user-service-aci \
                  --image watchtowergs.azurecr.io/watchtoweracr/user-service:latest \
                  --registry-login-server watchtowergs.azurecr.io \
                  --registry-username $(ACR_USERNAME) \
                  --registry-password $(ACR_PASSWORD) \
                  --cpu 1 \
                  --memory 1.5 \
                  --ports 5000 \
                  --dns-name-label user-service-aci-$(Build.BuildId) \
                  --os-type Linux

                az container create \
                  --resource-group rg-gs-watchTower \
                  --name mlnet-service-aci \
                  --image watchtowergs.azurecr.io/watchtoweracr/mlnet-service:latest \
                  --registry-login-server watchtowergs.azurecr.io \
                  --registry-username $(ACR_USERNAME) \
                  --registry-password $(ACR_PASSWORD) \
                  --cpu 1 \
                  --memory 1.5 \
                  --ports 5000 9090 \
                  --dns-name-label mlnet-service-aci-$(Build.BuildId) \
                  --os-type Linux

                az container create \
                  --resource-group rg-gs-watchTower \
                  --name rabbitmq-aci \
                  --image rabbitmq:3-management \
                  --cpu 1 \
                  --memory 1.5 \
                  --ports 5672 15672 \
                  --dns-name-label rabbitmq-aci-$(Build.BuildId) \
                  --os-type Linux
